version: "3.7"
services:
  # Generate traffic by hitting http://localhost:8081
  frontend:
    container_name: frontend
    image: openzipkin/example-sleuth-webmvc
    command: frontend
    environment:
      JAVA_OPTS: -Dspring.zipkin.baseUrl=http://otel-collector:9411
    ports:
      - 8081:8081
    networks:
      - my_network
    depends_on:
      - backend
      - zipkin
  # Serves the /api endpoint the frontend uses
  backend:
    container_name: backend
    image: openzipkin/example-sleuth-webmvc
    command: backend
    environment:
      JAVA_OPTS: -Dspring.zipkin.baseUrl=http://otel-collector:9411
    ports:
      - 9000:9000
    networks:
      - my_network
    depends_on:
      - zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - my_network
  situp:
    container_name: situp
    build:
      context: ../..
      dockerfile: examples/Dockerfile
    working_dir: /app
    command: sh situp-wait-for-odfe-and-start.sh
    volumes:
      - ../situp-wait-for-odfe-and-start.sh:/app/situp-wait-for-odfe-and-start.sh
      - ../trace_analytics.yml:/app/transformation-instance.yml
      - ../demo/root-ca.pem:/app/root-ca.pem
    ports:
      - "21890:21890"
    networks:
      - my_network
    depends_on:
      - opendistro-for-elasticsearch
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:0.11.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    working_dir: "/project"
    volumes:
      - ${PWD}:/project
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "9411"   # Zipkin receiver
    networks:
      - my_network
    depends_on:
      - zipkin
  opendistro-for-elasticsearch:
    container_name: node-0.example.com
    image: 'amazon/opendistro-for-elasticsearch:1.10.1'
    ports:
      - '9200:9200'
      - '9600:9600'
    environment:
      - discovery.type=single-node
    networks:
      - my_network
  kibana:
    build:
      context: ../..
      dockerfile: examples/kibana-trace-analytics/Dockerfile
    container_name: odfe-kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: https://node-0.example.com:9200
      ELASTICSEARCH_HOSTS: https://node-0.example.com:9200
    networks:
      - my_network
networks:
  my_network: